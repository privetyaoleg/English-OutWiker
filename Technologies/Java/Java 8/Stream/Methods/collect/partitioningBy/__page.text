* Cуществует коллектор '''partitioningBy''', который принимает поток и разбивает его содержимое на две группы . Чтобы определить, куда какой элемент поместить, этот коллектор пользуется предикатом  Predicate, а возвращает отображение Map, сопоставляющее булеву значению список List. Таким образом, в списке, соответствующем значению true, будут находиться элементы потока, для которых предикат вернул true, в списке, соответствующем значению false, – все остальные. С помощью этого механизма мы можем отделить группы (исполнители с несколькими участниками) от солистов. В данном случае функция разбиения сообщает, является ли исполнитель солистом. Ее реализация показана в примере
(:source lang="java" linenum:)

List<Integer> list2 = Arrays.asList(1, -20, 30, -4, -9, 0, 22);
isDigitPositive(list2);

public static Map<Boolean, List<Integer>> isDigitPositive(List<Integer> list){
			return list.stream().collect(Collectors.partitioningBy(digit -> digit > 0));
}

(:sourceend:)

(:thumbgallery cols=2 px=650:)
